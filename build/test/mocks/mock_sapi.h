/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_SAPI_H
#define _MOCK_SAPI_H

#include "sapi.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_sapi_Init(void);
void mock_sapi_Destroy(void);
void mock_sapi_Verify(void);




#define i2cRead_IgnoreAndReturn(cmock_retval) i2cRead_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void i2cRead_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define i2cRead_ExpectAndReturn(i2cNumber, i2cSlaveAddress, dataToReadBuffer, dataToReadBufferSize, sendWriteStop, receiveDataBuffer, receiveDataBufferSize, sendReadStop, cmock_retval) i2cRead_CMockExpectAndReturn(__LINE__, i2cNumber, i2cSlaveAddress, dataToReadBuffer, dataToReadBufferSize, sendWriteStop, receiveDataBuffer, receiveDataBufferSize, sendReadStop, cmock_retval)
void i2cRead_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t i2cNumber, uint8_t i2cSlaveAddress, uint8_t* dataToReadBuffer, uint16_t dataToReadBufferSize, uint8_t sendWriteStop, uint8_t* receiveDataBuffer, uint16_t receiveDataBufferSize, uint8_t sendReadStop, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_i2cRead_CALLBACK)(uint8_t i2cNumber, uint8_t i2cSlaveAddress, uint8_t* dataToReadBuffer, uint16_t dataToReadBufferSize, uint8_t sendWriteStop, uint8_t* receiveDataBuffer, uint16_t receiveDataBufferSize, uint8_t sendReadStop, int cmock_num_calls);
void i2cRead_StubWithCallback(CMOCK_i2cRead_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
